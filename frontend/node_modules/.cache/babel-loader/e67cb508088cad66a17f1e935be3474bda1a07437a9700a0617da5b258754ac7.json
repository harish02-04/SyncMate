{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Pictures\\\\SyncMate\\\\frontend\\\\src\\\\components\\\\Result.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Result = () => {\n  _s();\n  const chartRef = useRef(null);\n  const [chartData, setChartData] = useState(null);\n  useEffect(() => {\n    if (chartRef.current) {\n      // Check if the chart instance exists before attempting to destroy it\n      if (chartRef.current.chart) {\n        chartRef.current.chart.destroy();\n      }\n\n      // Set up chart data\n      const data = {\n        labels: [\"DesignThinking\", \"Java\", \"AIML\", \"CloudComputing\"],\n        datasets: [{\n          label: \"total count/value\",\n          data: [1552, 1319, 613, 1400],\n          backgroundColor: [\"teal\", \"aqua\", \"grey\", \"black\"],\n          borderColor: [\"aqua\", \"green\", \"red\", \"yellow\"],\n          borderWidth: 0.5\n        }]\n      };\n\n      // Set up chart options\n      const options = {\n        maintainAspectRatio: false,\n        scales: {\n          x: {\n            type: 'category',\n            // Correct syntax for the x-axis scale\n            stacked: true\n          },\n          y: {\n            stacked: true,\n            beginAtZero: true\n          }\n        },\n        legend: {\n          labels: {\n            fontSize: 15\n          }\n        }\n      };\n\n      // Set the chart data\n      setChartData({\n        data,\n        options\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Bar Graph Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), chartData && /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData.data,\n      options: chartData.options,\n      ref: chartRef,\n      width: 400,\n      height: 200\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Result, \"ZTzQmIhdsUBYjtzSiak73KU25Tg=\");\n_c = Result;\nexport default Result;\nvar _c;\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Bar","jsxDEV","_jsxDEV","Result","_s","chartRef","chartData","setChartData","current","chart","destroy","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","maintainAspectRatio","scales","x","type","stacked","y","beginAtZero","legend","fontSize","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","width","height","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Pictures/SyncMate/frontend/src/components/Result.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nconst Result = () => {\r\n  const chartRef = useRef(null);\r\n  const [chartData, setChartData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (chartRef.current) {\r\n      // Check if the chart instance exists before attempting to destroy it\r\n      if (chartRef.current.chart) {\r\n        chartRef.current.chart.destroy();\r\n      }\r\n\r\n      // Set up chart data\r\n      const data = {\r\n        labels: [\"DesignThinking\", \"Java\", \"AIML\", \"CloudComputing\"],\r\n        datasets: [\r\n          {\r\n            label: \"total count/value\",\r\n            data: [1552, 1319, 613, 1400],\r\n            backgroundColor: [\"teal\", \"aqua\", \"grey\", \"black\"],\r\n            borderColor: [\"aqua\", \"green\", \"red\", \"yellow\"],\r\n            borderWidth: 0.5,\r\n          },\r\n        ],\r\n      };\r\n\r\n      // Set up chart options\r\n      const options = {\r\n        maintainAspectRatio: false,\r\n        scales: {\r\n          x: {\r\n            type: 'category', // Correct syntax for the x-axis scale\r\n            stacked: true,\r\n          },\r\n          y: {\r\n            stacked: true,\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n        legend: {\r\n          labels: {\r\n            fontSize: 15,\r\n          },\r\n        },\r\n      };\r\n\r\n      // Set the chart data\r\n      setChartData({ data, options });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Bar Graph Example</h2>\r\n      {chartData && (\r\n        <Bar\r\n          data={chartData.data}\r\n          options={chartData.options}\r\n          ref={chartRef}\r\n          width={400}\r\n          height={200}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEhDF,SAAS,CAAC,MAAM;IACd,IAAIQ,QAAQ,CAACG,OAAO,EAAE;MACpB;MACA,IAAIH,QAAQ,CAACG,OAAO,CAACC,KAAK,EAAE;QAC1BJ,QAAQ,CAACG,OAAO,CAACC,KAAK,CAACC,OAAO,CAAC,CAAC;MAClC;;MAEA;MACA,MAAMC,IAAI,GAAG;QACXC,MAAM,EAAE,CAAC,gBAAgB,EAAE,MAAM,EAAE,MAAM,EAAE,gBAAgB,CAAC;QAC5DC,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,mBAAmB;UAC1BH,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC;UAC7BI,eAAe,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC;UAClDC,WAAW,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,CAAC;UAC/CC,WAAW,EAAE;QACf,CAAC;MAEL,CAAC;;MAED;MACA,MAAMC,OAAO,GAAG;QACdC,mBAAmB,EAAE,KAAK;QAC1BC,MAAM,EAAE;UACNC,CAAC,EAAE;YACDC,IAAI,EAAE,UAAU;YAAE;YAClBC,OAAO,EAAE;UACX,CAAC;UACDC,CAAC,EAAE;YACDD,OAAO,EAAE,IAAI;YACbE,WAAW,EAAE;UACf;QACF,CAAC;QACDC,MAAM,EAAE;UACNd,MAAM,EAAE;YACNe,QAAQ,EAAE;UACZ;QACF;MACF,CAAC;;MAED;MACApB,YAAY,CAAC;QAAEI,IAAI;QAAEO;MAAQ,CAAC,CAAC;IACjC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEhB,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAA0B,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzB1B,SAAS,iBACRJ,OAAA,CAACF,GAAG;MACFW,IAAI,EAAEL,SAAS,CAACK,IAAK;MACrBO,OAAO,EAAEZ,SAAS,CAACY,OAAQ;MAC3Be,GAAG,EAAE5B,QAAS;MACd6B,KAAK,EAAE,GAAI;MACXC,MAAM,EAAE;IAAI;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAhEID,MAAM;AAAAiC,EAAA,GAANjC,MAAM;AAkEZ,eAAeA,MAAM;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}