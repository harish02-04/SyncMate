{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Pictures\\\\SyncMate\\\\frontend\\\\src\\\\components\\\\Result.js\";\nimport React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Result = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"650px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: {\n          // Name of the variables on x-axies for each bar\n          labels: [\"1st bar\", \"2nd bar\", \"3rd bar\", \"4th bar\"],\n          datasets: [{\n            // Label for bars\n            label: \"total count/value\",\n            // Data or value of your each variable\n            data: [1552, 1319, 613, 1400],\n            // Color of each bar\n            backgroundColor: [\"aqua\", \"green\", \"red\", \"yellow\"],\n            // Border color of each bar\n            borderColor: [\"aqua\", \"green\", \"red\", \"yellow\"],\n            borderWidth: 0.5\n          }]\n        }\n        // Height of graph\n        ,\n        height: 400,\n        options: {\n          maintainAspectRatio: false,\n          scales: {\n            yAxes: [{\n              ticks: {\n                // The y-axis value will start from zero\n                beginAtZero: true\n              }\n            }]\n          },\n          legend: {\n            labels: {\n              fontSize: 15\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = Result;\nexport default Result;\nvar _c;\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["React","Bar","jsxDEV","_jsxDEV","Result","children","style","maxWidth","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","height","options","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","legend","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Pictures/SyncMate/frontend/src/components/Result.js"],"sourcesContent":["import React from 'react';\r\nimport  {Bar}  from 'react-chartjs-2';\r\nconst Result = () => {\r\n  return (\r\n    <div>\r\n    <div style={{ maxWidth: \"650px\" }}>\r\n        <Bar\r\n            data={{\r\n                // Name of the variables on x-axies for each bar\r\n                labels: [\"1st bar\", \"2nd bar\", \"3rd bar\", \"4th bar\"],\r\n                datasets: [\r\n                    {\r\n                        // Label for bars\r\n                        label: \"total count/value\",\r\n                        // Data or value of your each variable\r\n                        data: [1552, 1319, 613, 1400],\r\n                        // Color of each bar\r\n                        backgroundColor: \r\n                            [\"aqua\", \"green\", \"red\", \"yellow\"],\r\n                        // Border color of each bar\r\n                        borderColor: [\"aqua\", \"green\", \"red\", \"yellow\"],\r\n                        borderWidth: 0.5,\r\n                    },\r\n                ],\r\n            }}\r\n            // Height of graph\r\n            height={400}\r\n            options={{\r\n                maintainAspectRatio: false,\r\n                scales: {\r\n                    yAxes: [\r\n                        {\r\n                            ticks: {\r\n                          // The y-axis value will start from zero\r\n                                beginAtZero: true,\r\n                            },\r\n                        },\r\n                    ],\r\n                },\r\n                legend: {\r\n                    labels: {\r\n                        fontSize: 15,\r\n                    },\r\n                },\r\n            }}\r\n        />\r\n    </div>\r\n</div>\r\n  )\r\n}\r\nexport default Result;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACtC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EACnB,oBACED,OAAA;IAAAE,QAAA,eACAF,OAAA;MAAKG,KAAK,EAAE;QAAEC,QAAQ,EAAE;MAAQ,CAAE;MAAAF,QAAA,eAC9BF,OAAA,CAACF,GAAG;QACAO,IAAI,EAAE;UACF;UACAC,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;UACpDC,QAAQ,EAAE,CACN;YACI;YACAC,KAAK,EAAE,mBAAmB;YAC1B;YACAH,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC;YAC7B;YACAI,eAAe,EACX,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,CAAC;YACtC;YACAC,WAAW,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,CAAC;YAC/CC,WAAW,EAAE;UACjB,CAAC;QAET;QACA;QAAA;QACAC,MAAM,EAAE,GAAI;QACZC,OAAO,EAAE;UACLC,mBAAmB,EAAE,KAAK;UAC1BC,MAAM,EAAE;YACJC,KAAK,EAAE,CACH;cACIC,KAAK,EAAE;gBACT;gBACMC,WAAW,EAAE;cACjB;YACJ,CAAC;UAET,CAAC;UACDC,MAAM,EAAE;YACJb,MAAM,EAAE;cACJc,QAAQ,EAAE;YACd;UACJ;QACJ;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEN,CAAC;AAAAC,EAAA,GA/CKxB,MAAM;AAgDZ,eAAeA,MAAM;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}