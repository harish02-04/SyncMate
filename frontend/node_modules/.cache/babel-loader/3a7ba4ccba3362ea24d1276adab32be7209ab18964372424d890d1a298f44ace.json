{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Pictures\\\\SyncMate\\\\frontend\\\\src\\\\components\\\\Result.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Result = () => {\n  _s();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    if (chartRef.current) {\n      const chartInstance = chartRef.current.chart;\n      chartInstance.destroy();\n    }\n    const ctx = chartRef.current.getContext('2d');\n    new Bar(ctx, {\n      data: {\n        labels: [\"DesignThinking\", \"Java\", \"AIML\", \"CloudComputing\"],\n        datasets: [{\n          label: \"total count/value\",\n          data: [1552, 1319, 613, 1400],\n          backgroundColor: [\"teal\", \"aqua\", \"grey\", \"black\"],\n          borderColor: [\"aqua\", \"green\", \"red\", \"yellow\"],\n          borderWidth: 0.5\n        }]\n      },\n      options: {\n        maintainAspectRatio: false,\n        scales: {\n          x: {\n            type: 'category',\n            // Correct syntax for the x-axis scale\n            stacked: true\n          },\n          y: {\n            stacked: true,\n            beginAtZero: true\n          }\n        },\n        legend: {\n          labels: {\n            fontSize: 15\n          }\n        }\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Bar Graph Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartRef,\n      width: \"400\",\n      height: \"200\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Result, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = Result;\nexport default Result;\nvar _c;\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["React","useEffect","useRef","Bar","jsxDEV","_jsxDEV","Result","_s","chartRef","current","chartInstance","chart","destroy","ctx","getContext","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","maintainAspectRatio","scales","x","type","stacked","y","beginAtZero","legend","fontSize","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","width","height","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Pictures/SyncMate/frontend/src/components/Result.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nconst Result = () => {\r\n  const chartRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (chartRef.current) {\r\n      const chartInstance = chartRef.current.chart;\r\n      chartInstance.destroy();\r\n    }\r\n\r\n    const ctx = chartRef.current.getContext('2d');\r\n\r\n    new Bar(ctx, {\r\n      data: {\r\n        labels: [\"DesignThinking\", \"Java\", \"AIML\", \"CloudComputing\"],\r\n        datasets: [\r\n          {\r\n            label: \"total count/value\",\r\n            data: [1552, 1319, 613, 1400],\r\n            backgroundColor: [\"teal\", \"aqua\", \"grey\", \"black\"],\r\n            borderColor: [\"aqua\", \"green\", \"red\", \"yellow\"],\r\n            borderWidth: 0.5,\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        maintainAspectRatio: false,\r\n        scales: {\r\n          x: {\r\n            type: 'category', // Correct syntax for the x-axis scale\r\n            stacked: true,\r\n          },\r\n          y: {\r\n            stacked: true,\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n        legend: {\r\n          labels: {\r\n            fontSize: 15,\r\n          },\r\n        },\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Bar Graph Example</h2>\r\n      <canvas ref={chartRef} width=\"400\" height=\"200\"></canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd,IAAIO,QAAQ,CAACC,OAAO,EAAE;MACpB,MAAMC,aAAa,GAAGF,QAAQ,CAACC,OAAO,CAACE,KAAK;MAC5CD,aAAa,CAACE,OAAO,CAAC,CAAC;IACzB;IAEA,MAAMC,GAAG,GAAGL,QAAQ,CAACC,OAAO,CAACK,UAAU,CAAC,IAAI,CAAC;IAE7C,IAAIX,GAAG,CAACU,GAAG,EAAE;MACXE,IAAI,EAAE;QACJC,MAAM,EAAE,CAAC,gBAAgB,EAAE,MAAM,EAAE,MAAM,EAAE,gBAAgB,CAAC;QAC5DC,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,mBAAmB;UAC1BH,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC;UAC7BI,eAAe,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC;UAClDC,WAAW,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,CAAC;UAC/CC,WAAW,EAAE;QACf,CAAC;MAEL,CAAC;MACDC,OAAO,EAAE;QACPC,mBAAmB,EAAE,KAAK;QAC1BC,MAAM,EAAE;UACNC,CAAC,EAAE;YACDC,IAAI,EAAE,UAAU;YAAE;YAClBC,OAAO,EAAE;UACX,CAAC;UACDC,CAAC,EAAE;YACDD,OAAO,EAAE,IAAI;YACbE,WAAW,EAAE;UACf;QACF,CAAC;QACDC,MAAM,EAAE;UACNd,MAAM,EAAE;YACNe,QAAQ,EAAE;UACZ;QACF;MACF;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE1B,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAA2B,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1B/B,OAAA;MAAQgC,GAAG,EAAE7B,QAAS;MAAC8B,KAAK,EAAC,KAAK;MAACC,MAAM,EAAC;IAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV,CAAC;AAAC7B,EAAA,CAnDID,MAAM;AAAAkC,EAAA,GAANlC,MAAM;AAqDZ,eAAeA,MAAM;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}