{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Pictures\\\\SyncMate\\\\frontend\\\\src\\\\components\\\\Result.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Result = () => {\n  _s();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    let chartInstance;\n    if (chartRef.current) {\n      // Check if the chart instance exists before attempting to destroy it\n      if (chartRef.current.chart) {\n        chartInstance = chartRef.current.chart;\n        chartInstance.destroy();\n      }\n      const ctx = chartRef.current.getContext('2d');\n\n      // Create a new chart\n      new Bar(ctx, {\n        data: {\n          labels: [\"DesignThinking\", \"Java\", \"AIML\", \"CloudComputing\"],\n          datasets: [{\n            label: \"total count/value\",\n            data: [1552, 1319, 613, 1400],\n            backgroundColor: [\"teal\", \"aqua\", \"grey\", \"black\"],\n            borderColor: [\"aqua\", \"green\", \"red\", \"yellow\"],\n            borderWidth: 0.5\n          }]\n        },\n        options: {\n          maintainAspectRatio: false,\n          scales: {\n            x: {\n              type: 'category',\n              // Correct syntax for the x-axis scale\n              stacked: true\n            },\n            y: {\n              stacked: true,\n              beginAtZero: true\n            }\n          },\n          legend: {\n            labels: {\n              fontSize: 15\n            }\n          }\n        }\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Bar Graph Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartRef,\n      width: \"400\",\n      height: \"200\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Result, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = Result;\nexport default Result;\nvar _c;\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["React","useEffect","useRef","Bar","jsxDEV","_jsxDEV","Result","_s","chartRef","chartInstance","current","chart","destroy","ctx","getContext","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","maintainAspectRatio","scales","x","type","stacked","y","beginAtZero","legend","fontSize","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","width","height","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Pictures/SyncMate/frontend/src/components/Result.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nconst Result = () => {\r\n  const chartRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    let chartInstance;\r\n\r\n    if (chartRef.current) {\r\n      // Check if the chart instance exists before attempting to destroy it\r\n      if (chartRef.current.chart) {\r\n        chartInstance = chartRef.current.chart;\r\n        chartInstance.destroy();\r\n      }\r\n\r\n      const ctx = chartRef.current.getContext('2d');\r\n\r\n      // Create a new chart\r\n      new Bar(ctx, {\r\n        data: {\r\n          labels: [\"DesignThinking\", \"Java\", \"AIML\", \"CloudComputing\"],\r\n          datasets: [\r\n            {\r\n              label: \"total count/value\",\r\n              data: [1552, 1319, 613, 1400],\r\n              backgroundColor: [\"teal\", \"aqua\", \"grey\", \"black\"],\r\n              borderColor: [\"aqua\", \"green\", \"red\", \"yellow\"],\r\n              borderWidth: 0.5,\r\n            },\r\n          ],\r\n        },\r\n        options: {\r\n          maintainAspectRatio: false,\r\n          scales: {\r\n            x: {\r\n              type: 'category', // Correct syntax for the x-axis scale\r\n              stacked: true,\r\n            },\r\n            y: {\r\n              stacked: true,\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n          legend: {\r\n            labels: {\r\n              fontSize: 15,\r\n            },\r\n          },\r\n        },\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Bar Graph Example</h2>\r\n      <canvas ref={chartRef} width=\"400\" height=\"200\"></canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd,IAAIQ,aAAa;IAEjB,IAAID,QAAQ,CAACE,OAAO,EAAE;MACpB;MACA,IAAIF,QAAQ,CAACE,OAAO,CAACC,KAAK,EAAE;QAC1BF,aAAa,GAAGD,QAAQ,CAACE,OAAO,CAACC,KAAK;QACtCF,aAAa,CAACG,OAAO,CAAC,CAAC;MACzB;MAEA,MAAMC,GAAG,GAAGL,QAAQ,CAACE,OAAO,CAACI,UAAU,CAAC,IAAI,CAAC;;MAE7C;MACA,IAAIX,GAAG,CAACU,GAAG,EAAE;QACXE,IAAI,EAAE;UACJC,MAAM,EAAE,CAAC,gBAAgB,EAAE,MAAM,EAAE,MAAM,EAAE,gBAAgB,CAAC;UAC5DC,QAAQ,EAAE,CACR;YACEC,KAAK,EAAE,mBAAmB;YAC1BH,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC;YAC7BI,eAAe,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC;YAClDC,WAAW,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,CAAC;YAC/CC,WAAW,EAAE;UACf,CAAC;QAEL,CAAC;QACDC,OAAO,EAAE;UACPC,mBAAmB,EAAE,KAAK;UAC1BC,MAAM,EAAE;YACNC,CAAC,EAAE;cACDC,IAAI,EAAE,UAAU;cAAE;cAClBC,OAAO,EAAE;YACX,CAAC;YACDC,CAAC,EAAE;cACDD,OAAO,EAAE,IAAI;cACbE,WAAW,EAAE;YACf;UACF,CAAC;UACDC,MAAM,EAAE;YACNd,MAAM,EAAE;cACNe,QAAQ,EAAE;YACZ;UACF;QACF;MACF,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE1B,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAA2B,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1B/B,OAAA;MAAQgC,GAAG,EAAE7B,QAAS;MAAC8B,KAAK,EAAC,KAAK;MAACC,MAAM,EAAC;IAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV,CAAC;AAAC7B,EAAA,CAzDID,MAAM;AAAAkC,EAAA,GAANlC,MAAM;AA2DZ,eAAeA,MAAM;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}