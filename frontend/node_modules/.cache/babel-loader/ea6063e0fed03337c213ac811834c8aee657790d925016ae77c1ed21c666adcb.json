{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Pictures\\\\SyncMate\\\\frontend\\\\src\\\\components\\\\Result.js\",\n  _s = $RefreshSig$();\n// CircularProgressBar.js\nimport React, { useState, useEffect } from 'react';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Result = () => {\n  _s();\n  const [percentage, setPercentage] = useState(50);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setPercentage(prevPercentage => prevPercentage >= 100 ? 0 : prevPercentage + 1);\n    }, 50);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100px',\n      margin: '50px auto'\n    },\n    children: /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n      value: percentage,\n      text: `${percentage}%`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(Result, \"tth6pLfx9TmaPcsBDHHdD5tS3Mk=\");\n_c = Result;\nexport default Result;\nvar _c;\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["React","useState","useEffect","CircularProgressbar","jsxDEV","_jsxDEV","Result","_s","percentage","setPercentage","timer","setInterval","prevPercentage","clearInterval","style","width","margin","children","value","text","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Pictures/SyncMate/frontend/src/components/Result.js"],"sourcesContent":["// CircularProgressBar.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport { CircularProgressbar } from 'react-circular-progressbar';\r\n\r\nconst Result = () => {\r\n  const [percentage, setPercentage] = useState(50);\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setPercentage((prevPercentage) => (prevPercentage >= 100 ? 0 : prevPercentage + 1));\r\n    }, 50);\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ width: '100px', margin: '50px auto' }}>\r\n      <CircularProgressbar value={percentage} text={`${percentage}%`} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,4CAA4C;AACnD,SAASC,mBAAmB,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMQ,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC9BF,aAAa,CAAEG,cAAc,IAAMA,cAAc,IAAI,GAAG,GAAG,CAAC,GAAGA,cAAc,GAAG,CAAE,CAAC;IACrF,CAAC,EAAE,EAAE,CAAC;IAEN,OAAO,MAAM;MACXC,aAAa,CAACH,KAAK,CAAC;IACtB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKS,KAAK,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAY,CAAE;IAAAC,QAAA,eAClDZ,OAAA,CAACF,mBAAmB;MAACe,KAAK,EAAEV,UAAW;MAACW,IAAI,EAAG,GAAEX,UAAW;IAAG;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/D,CAAC;AAEV,CAAC;AAAChB,EAAA,CAlBID,MAAM;AAAAkB,EAAA,GAANlB,MAAM;AAoBZ,eAAeA,MAAM;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}